#!/bin/bash
# 3dctl - script to control the status of 3D/compositing window managers
# Copyright (C) Eskild Hustvedt 2011
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

action="$1"
status3d="unknown"
WM="unknown"
VERSION="0.1"

# Detects which WM is in use
function detectWM
{
	wmtype="unknown"
	ROOTPROPS="$(xprop -root 2>/dev/null)"
	compiz=0

	if echo "$ROOTPROPS"|grep -q KWIN_RUNNING || [ "$KDE_FULL_SESSION" != "" ]; then
		if echo "$ROOTPROPS"|egrep -q '^_COMPIZ_WINDOW_DECOR_' && type compiz &>/dev/null; then
			wmtype="kwin-compiz"
		else
			wmtype="kwin"
		fi
	elif echo "$ROOTPROPS"|grep -q METACITY || [ "$GNOME_DESKTOP_SESSION_ID" != "" ] || dbus-send --print-reply --dest=org.freedesktop.DBus /org/freedesktop/DBus org.freedesktop.DBus.GetNameOwner string:org.gnome.SessionManager &>/dev/null ; then
		wmtype="metacity"
		compiz=1
	elif echo "$ROOTPROPS" |grep _DT_SAVE_MODE 2>/dev/null |grep -q xfce4; then
		wmtype="xfwm4"
		compiz=1
	fi
	if [ "$compiz" == "1" ]; then
		if type compiz &>/dev/null; then
			wmtype="$wmtype-compiz"
		else
			wmtype="no3d"
		fi
	fi
	echo "$wmtype"
}
# Detects the status of 3d effects (on or off)
function detectStatus 
{
	WM="$1"
	current="off"
	case $WM in
		kwin)
			STATUS="`qdbus org.kde.kwin /KWin org.kde.KWin.compositingActive`"
			if [ "$STATUS" == "true" ]; then
				current="on"
			fi
			;;
		*compiz)
			if compizRunning; then
				current="on"
			fi
			;;
		*)
			current="unknown"
			;;
	esac
	echo "$current"
}
# Detects if compiz is running or not
function compizRunning
{
	# If there are no compiz settings on the root window, compiz isn't running
	if ! xprop -root 2>/dev/null|egrep -q '^_COMPIZ_WINDOW_DECOR_'; then
		return 1
	fi
	# Since compiz doesn't remove its properties on exit, we use this hack
	# to check if it's running
	if ps -C compiz &>/dev/null && ps u |egrep -q ' compiz'; then
		return 0
	fi
	return 1
}
# Runs WM and 3d status detection
function initStatus
{
	WM="`detectWM`"
	status3d="`detectStatus "$WM"`"
}

# Toggles 3D effects for KDE
function setKDE
{
	qdbus org.kde.kwin /KWin org.kde.KWin.toggleCompositing
}
# Toggles 3D effects for all Compiz variants (others just wrap this)
function _setCompiz
{
	other="$1"
	if [ "$status3d" == "on" ]; then
		"$other" --replace &
	else
		compiz --replace &
	fi
}
# Toggles 3D effects for KDE with Compiz
function setKDECompiz
{
	# Turn off kwin effects if enabled
	if [ "$status3d" == "on" ]; then
		if [ "`detectStatus 'kwin'`" == "on" ]; then
			setKDE
		fi
	fi

	_setCompiz 'kwin'
}
# Toggles 3D effects for GNOME (metacity/compiz)
function setGNOME
{
	_setCompiz 'metacity'
}
# Toggles 3D effects for XFce (xfwm4/compiz)
function setXFCE
{
	_setCompiz 'xfwm4'
}

# Runs the action corresponding to the detected WM or echoes and error and exits
function performAction ()
{
	if [ "$1" != "" ]; then
		action="$1"
	fi
	if [ "$action" == "$status3d" ]; then
		return 0
	fi
	if [ "$action" == "unknown" ] && [ "$WM" != "no3d" ]; then
		echo "3dctl: Failed to detect 3d status"
		return 1
	fi
	if [ "$WM" == "kwin" ]; then
		setKDE
	elif [ "$WM" == "metacity-compiz" ]; then
		setGNOME
	elif [ "$WM" == "xfwm4-compiz" ]; then
		setXFCE
	elif [ "$WM" == "kwin-compiz" ]; then
		setKDECompiz
	elif [ "$WM" != "no3d" ]; then
		echo "3dctl: Failed to detect window manager"
		return 1
	fi
	return 0
}

initStatus
case $action in
	on|off|toggle)
		performAction
		exit $?;;
	status)
		echo "$status3d"
		exit 0;;
	info)
		echo "WM detected as:     $WM"
		echo "3D status detected: $status3d"
		exit 0;;
	run2d)
		shift
		# This variable is exported to allow children to know that they are running under
		# 3dctl
		export _RUNNING_UNDER_3DCTL="true"
		# If 3d is on, turn it off for the duration of the command
		if [ "$status3d" == "on" ]; then
			performAction 'off'
			"$@"
			ret="$?"
			# Re-fetch status, in case it has changed while we were running the command
			initStatus
			performAction 'on'
			exit $ret
		else
			# If 3d is already off, then there's nothing for us to do, so we just exec it
			exec "$@"
			echo "Failed to exec: $@"
			exit 2
		fi;;
	--version)
		echo "3dctl version $VERSION"
		exit 0 ;;
	*)
		echoHelp=0
		base0=$(basename "$0")
		ret=0
		if [ "$action" == "-h" ] || [ "$action" == "--help" ]; then
			echoHelp=1
		fi
		if [ "$echoHelp" != "1" ] && [ "$action" != "" ]; then
			ret="1"
			echo ""
			echo "$action: unknown action"
		fi
		echo ""
		echo "3dctl - script to control the status of 3d desktop effects"
		echo "Usage: $base0 [ACTION]"
		echo ""
		echo "ACTION can be one of:"
		echo "on        - Turns 3d effects on if they are off"
		echo "off       - Turns 3d effects off if they are on"
		echo "toggle    - Toggles the 3d status (on if off, off if on)"
		echo ""
		if [ "$echoHelp" == "1" ]; then
			echo "run2d CMD - runs CMD with 3d effects disabled, re-enabling them afterwards if"
			echo "             they were on. Everything after 'run2d' is considered a part of the"
			echo "             command to run. 3dctl will exit with the return value from CMD."
			echo "info      - Displays information about detected WM and 3D status"
			echo "status    - Echo 3d status (on or off) and exit"
			echo ""
			echo "See also the manpage for additional information"
		else
			echo "See $base0 --help for additional actions"
		fi
		exit $ret;;
esac
